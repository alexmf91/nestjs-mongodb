services:
  dev:
    container_name: -api_dev
    image: -api-dev:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: yarn start:debug
    ports:
      - 8000:8000
    networks:
      - api-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  prod:
    container_name: -api_prod
    image: -api-prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    ports:
      - 5000:5000
    networks:
      - api-network
    restart: unless-stopped

  mongodb:
    image: mongo:4.2
    container_name: -api_DB
    ports:
      - 27017:27017
    networks:
      - api-network
    env_file: ./src/config/environments/.env.development
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    volumes:
      - mongodb:/data/db

  mongo-express:
    image: mongo-express:0.54
    container_name: -api-DB_interface
    ports:
      - 8081:8081
    networks:
      - api-network
    env_file: ./src/config/environments/.env.development
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_PASS}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASS}

volumes:
  mongodb:
networks:
  api-network:
